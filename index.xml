<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Choco-solver – Choco-solver</title>
    <link>https://choco-solver.org/</link>
    <description>Recent content on Choco-solver</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://choco-solver.org/index.xml" rel="self" type="application/rss+xml" />
    
    
      
      
    
    
    <item>
      <title>Blog: Project Euler, Problem 103</title>
      <link>https://choco-solver.org/blog/2021/02/02/project-euler-problem-103/</link>
      <pubDate>Tue, 02 Feb 2021 09:21:16 +0100</pubDate>
      
      <guid>https://choco-solver.org/blog/2021/02/02/project-euler-problem-103/</guid>
      <description>
        
        
        &lt;p&gt;Thanks to &lt;a href=&#34;https://www.univ-nantes.fr/mathieu-vavrille&#34;&gt;Mathieu Vavrille&lt;/a&gt; for his modelling of &lt;a href=&#34;https://projecteuler.net/problem=103&#34;&gt;problem 103 of the Euler project&lt;/a&gt;, &amp;ldquo;Special subset sums: optimum&amp;rdquo;, using Constraint Programming and Choco.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Euler {

  public static void main(final String[] args) {
    System.out.println(euler103());
  }

  /** Euler 103, Special subset sums */
  private static String euler103() {
    int n = 7;
    int bound = 40;
    List&amp;lt;Set&amp;lt;Integer&amp;gt;&amp;gt; allPartitions = partitions(n-1); // Enumerates all the partitions of {0, ..., n-1}
    Model model = new Model();
    IntVar[] mainSet = model.intVarArray(&amp;quot;set&amp;quot;, n, 0, 100); // Numbers in the set
    for (int i = 0; i &amp;lt; n-1; i++) {
      mainSet[i].lt(mainSet[i+1]).post(); // Order the numbers in the set
    }
    IntVar[] partitionSums = model.intVarArray(&amp;quot;partition&amp;quot;, allPartitions.size(), 0, n*bound); // Create a variable representing the sum of each subset
    for (int i = 0; i &amp;lt; partitionSums.length; i++)
      model.sum(allPartitions.get(i).stream()
                .map(id -&amp;gt; mainSet[id])
                .toArray(IntVar[]::new), &amp;quot;=&amp;quot;, partitionSums[i]).post();
  for (int i = 0; i &amp;lt; allPartitions.size(); i++)
      for (int j = i+1; j &amp;lt; allPartitions.size(); j++)
        if (Collections.disjoint(allPartitions.get(i), allPartitions.get(j))) { // Enforce the constraint for distinct subsets
          if (allPartitions.get(i).size() &amp;gt; allPartitions.get(j).size())
            partitionSums[i].gt(partitionSums[j]).post();
          else if (allPartitions.get(i).size() == allPartitions.get(j).size())
            partitionSums[i].ne(partitionSums[j]).post();
          else if (allPartitions.get(i).size() &amp;lt; allPartitions.get(j).size())
            partitionSums[i].lt(partitionSums[j]).post();
        }
  model.setObjective(false, partitionSums[partitionSums.length-1]); // Objective is the sum of the variables in the set
  Solver solver = model.getSolver();
  String result = &amp;quot;&amp;quot;;
  while (solver.solve()) { // Solve
    result = Arrays.stream(mainSet)
      .map(var -&amp;gt; Integer.toString(var.getValue()))
      .collect(Collectors.joining());
  }
  return result;
  }
  
  private static List&amp;lt;Set&amp;lt;Integer&amp;gt;&amp;gt; partitions(final int n) {
    if (n == 0) {
      List&amp;lt;Set&amp;lt;Integer&amp;gt;&amp;gt; parts = new ArrayList&amp;lt;Set&amp;lt;Integer&amp;gt;&amp;gt;();
      parts.add(new HashSet&amp;lt;Integer&amp;gt;());
      parts.add(Set.of(0));
      return parts;
    }
    List&amp;lt;Set&amp;lt;Integer&amp;gt;&amp;gt; smaller = partitions(n-1);
    for (int i = 0; i &amp;lt; 1&amp;lt;&amp;lt;n; i++) {
      Set&amp;lt;Integer&amp;gt; currentAdded = new HashSet&amp;lt;Integer&amp;gt;(smaller.get(i));
      currentAdded.add(n);
      smaller.add(currentAdded);
    }
    return smaller;
  }
  
}
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: A book in french about CP</title>
      <link>https://choco-solver.org/blog/2020/03/02/a-book-in-french-about-cp/</link>
      <pubDate>Mon, 02 Mar 2020 11:47:17 +0100</pubDate>
      
      <guid>https://choco-solver.org/blog/2020/03/02/a-book-in-french-about-cp/</guid>
      <description>
        
        
        &lt;p&gt;If you read french, you may be interested in this book entitled &lt;strong&gt;&amp;ldquo;Programmation par Contraintes : démarches de modélisations pour des problèmes d&amp;rsquo;optimisation&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The following link provides more details, including codes in Choco-solver:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://fc.isima.fr/~lacomme/PPC_Avancee/&#34;&gt;http://fc.isima.fr/~lacomme/PPC_Avancee/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many thanks to the authors for this work.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Tutorials migration</title>
      <link>https://choco-solver.org/blog/2020/02/05/tutorials-migration/</link>
      <pubDate>Wed, 05 Feb 2020 17:44:29 +0100</pubDate>
      
      <guid>https://choco-solver.org/blog/2020/02/05/tutorials-migration/</guid>
      <description>
        
        
        &lt;p&gt;The updating of the site continues with the progressive migration of the tutorials.&lt;/p&gt;
&lt;p&gt;We are now close to a release. It will be effective once the validation of the current version of the documentation and especially the update of the release scripts has been completed.
We will try to keep you informed by publishing a post.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Revamping documentation</title>
      <link>https://choco-solver.org/blog/2020/01/31/revamping-documentation/</link>
      <pubDate>Fri, 31 Jan 2020 10:26:28 +0100</pubDate>
      
      <guid>https://choco-solver.org/blog/2020/01/31/revamping-documentation/</guid>
      <description>
        
        
        &lt;p&gt;We are pleased to announce that the Choco-solver site is getting a fresh start. We wish to gather under the same banner the technical documentation and the tutorials.&lt;/p&gt;
&lt;p&gt;For this, we chose &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo, a static site generator&lt;/a&gt; and &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy, a pretty Hugo theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The update of the documentation is just starting, you can check the status, report errors or contribute by going to the &lt;a href=&#34;https://choco-solver.org/docs/&#34;&gt;Documentation&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;We will also transfer the tutorials to a separate page as soon as possible.&lt;/p&gt;
&lt;p&gt;The motivated team !&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
